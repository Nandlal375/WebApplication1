DataBase Name => colleage

CREATE DATABASE colleage
CREATE TABLE Employee(EmpId int not null identity(1,1), EmpName varchar(100), salary int)

INSERT INTO Employee(EmpName, salary) values ('ram', 5000)
INSERT INTO Employee(EmpName, salary) values ('ram1', 6000)
INSERT INTO Employee(EmpName, salary) values ('ram2', 7000)
INSERT INTO Employee(EmpName, salary) values ('ram3', 8000)
INSERT INTO Employee(EmpName, salary) values ('ram4', 9000)

Select * from Employee
SELECT MAX(salary) from Employee where salary < (select max(salary) from Employee)

SELECT * from Employee as t1 where 2 = (select count(*) from Employee t2 where t1.salary <= t2.salary)

select top 1 * from 
(SELECT top 4 * FROM Employee order by salary desc) as temp order by salary


select *, ROW_NUMBER() over(partition by salary ORDER by salary) as rnum from Employee

select * from 
(select *, ROW_NUMBER() over(ORDER by salary DESC) as rnum from Employee)as temp
where rnum = 2

---Cumulative sum----

-----Alternative row find even row------------
select * from Employee where EmpId % 2 = 0

-----Alternative row find odd row------------
select * from Employee where EmpId % 2 = 1

---Cumulative sum salary----
SELECT e1.EmpId,
       e1.Salary,
	   e1.EmpName,
       (SELECT SUM(e2.Salary)
        FROM Employee e2
        WHERE e2.EmpId <= e1.EmpId) AS CumulativeSalary
FROM Employee e1;


---self join-------
SELECT A1.EmpId, A1.EmpName, A1.salary FROM Employee as A1,
Employee as A2 where A1.EmpId = A2.EmpId

===============Sql Interview Question==================
1.Indexes. {Cluster index ->(multiple column apply same cluster index is called composite index), Non-cluster index}.
2.Transaction.
3.Constraints.
4. Store procedure optimization.


Trigger-Special type of store procedure use to track deleted record or information(DML,DDL)

View-Virtual table data not store in database(to improve performance,hide actual table information)

Where,GroupBy,Having-where used for filter data on condition,GroupBy use for take value in group used by aggerigate function having clause contain aggregate function with group by
SubQuery is Query with in Query

Delete(DML)-Used to delete on or more record with condition but not delete schema(tbl structure) delete from employee where id=2,roll back

Truncate(DDL)-used to delete all record,not used where condition,not delete schema(tbl structure) truncate table employee,not roll back

Drop(DDL)-used to delete all record,delete schema(tbl structure) drop table employee,not roll back

StoreProcedure-return or not return value,sp have i/p & o/p both parameter,call sp inside function,try catch ex in sp

Function-must return value,F have only i/p parameter,not call sp inside function,try catch ex not in Funct

CTE-Common Table Expression is an expression that returns a temporary result set.Reference with in SELECT,INSERT,UPDATE,DELETE

Nth Higest Salary-select distinct Top(N) salary from employee order by salary desc-->select top(1) salary from (select distinct Top(N) salary from employee order by salary desc)result order by salary














